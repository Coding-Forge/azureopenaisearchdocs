{"version":3,"file":"OneShot-8cf17bae.js","sources":["../../../frontend/src/pages/oneshot/OneShot.tsx"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport { Checkbox, ChoiceGroup, IChoiceGroupOption, Panel, DefaultButton, Spinner, TextField, SpinButton, IDropdownOption, Dropdown } from \"@fluentui/react\";\n\nimport styles from \"./OneShot.module.css\";\n\nimport { askApi, Approaches, AskResponse, AskRequest, RetrievalMode } from \"../../api\";\nimport { Answer, AnswerError } from \"../../components/Answer\";\nimport { QuestionInput } from \"../../components/QuestionInput\";\nimport { ExampleList } from \"../../components/Example\";\nimport { AnalysisPanel, AnalysisPanelTabs } from \"../../components/AnalysisPanel\";\nimport { SettingsButton } from \"../../components/SettingsButton/SettingsButton\";\n\nexport function Component(): JSX.Element {\n    const [isConfigPanelOpen, setIsConfigPanelOpen] = useState(false);\n    const [approach, setApproach] = useState<Approaches>(Approaches.RetrieveThenRead);\n    const [promptTemplate, setPromptTemplate] = useState<string>(\"\");\n    const [promptTemplatePrefix, setPromptTemplatePrefix] = useState<string>(\"\");\n    const [promptTemplateSuffix, setPromptTemplateSuffix] = useState<string>(\"\");\n    const [retrievalMode, setRetrievalMode] = useState<RetrievalMode>(RetrievalMode.Hybrid);\n    const [retrieveCount, setRetrieveCount] = useState<number>(3);\n    const [useSemanticRanker, setUseSemanticRanker] = useState<boolean>(true);\n    const [useSemanticCaptions, setUseSemanticCaptions] = useState<boolean>(false);\n    const [excludeCategory, setExcludeCategory] = useState<string>(\"\");\n\n    const lastQuestionRef = useRef<string>(\"\");\n\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [error, setError] = useState<unknown>();\n    const [answer, setAnswer] = useState<AskResponse>();\n\n    const [activeCitation, setActiveCitation] = useState<string>();\n    const [activeAnalysisPanelTab, setActiveAnalysisPanelTab] = useState<AnalysisPanelTabs | undefined>(undefined);\n\n    const makeApiRequest = async (question: string) => {\n        lastQuestionRef.current = question;\n\n        error && setError(undefined);\n        setIsLoading(true);\n        setActiveCitation(undefined);\n        setActiveAnalysisPanelTab(undefined);\n\n        try {\n            const request: AskRequest = {\n                question,\n                approach,\n                overrides: {\n                    promptTemplate: promptTemplate.length === 0 ? undefined : promptTemplate,\n                    promptTemplatePrefix: promptTemplatePrefix.length === 0 ? undefined : promptTemplatePrefix,\n                    promptTemplateSuffix: promptTemplateSuffix.length === 0 ? undefined : promptTemplateSuffix,\n                    excludeCategory: excludeCategory.length === 0 ? undefined : excludeCategory,\n                    top: retrieveCount,\n                    retrievalMode: retrievalMode,\n                    semanticRanker: useSemanticRanker,\n                    semanticCaptions: useSemanticCaptions\n                }\n            };\n            const result = await askApi(request);\n            setAnswer(result);\n        } catch (e) {\n            setError(e);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const onPromptTemplateChange = (_ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\n        setPromptTemplate(newValue || \"\");\n    };\n\n    const onPromptTemplatePrefixChange = (_ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\n        setPromptTemplatePrefix(newValue || \"\");\n    };\n\n    const onPromptTemplateSuffixChange = (_ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\n        setPromptTemplateSuffix(newValue || \"\");\n    };\n\n    const onRetrieveCountChange = (_ev?: React.SyntheticEvent<HTMLElement, Event>, newValue?: string) => {\n        setRetrieveCount(parseInt(newValue || \"3\"));\n    };\n\n    const onRetrievalModeChange = (_ev: React.FormEvent<HTMLDivElement>, option?: IDropdownOption<RetrievalMode> | undefined, index?: number | undefined) => {\n        setRetrievalMode(option?.data || RetrievalMode.Hybrid);\n    };\n\n    const onApproachChange = (_ev?: React.FormEvent<HTMLElement | HTMLInputElement>, option?: IChoiceGroupOption) => {\n        setApproach((option?.key as Approaches) || Approaches.RetrieveThenRead);\n    };\n\n    const onUseSemanticRankerChange = (_ev?: React.FormEvent<HTMLElement | HTMLInputElement>, checked?: boolean) => {\n        setUseSemanticRanker(!!checked);\n    };\n\n    const onUseSemanticCaptionsChange = (_ev?: React.FormEvent<HTMLElement | HTMLInputElement>, checked?: boolean) => {\n        setUseSemanticCaptions(!!checked);\n    };\n\n    const onExcludeCategoryChanged = (_ev?: React.FormEvent, newValue?: string) => {\n        setExcludeCategory(newValue || \"\");\n    };\n\n    const onExampleClicked = (example: string) => {\n        makeApiRequest(example);\n    };\n\n    const onShowCitation = (citation: string) => {\n        if (activeCitation === citation && activeAnalysisPanelTab === AnalysisPanelTabs.CitationTab) {\n            setActiveAnalysisPanelTab(undefined);\n        } else {\n            setActiveCitation(citation);\n            setActiveAnalysisPanelTab(AnalysisPanelTabs.CitationTab);\n        }\n    };\n\n    const onToggleTab = (tab: AnalysisPanelTabs) => {\n        if (activeAnalysisPanelTab === tab) {\n            setActiveAnalysisPanelTab(undefined);\n        } else {\n            setActiveAnalysisPanelTab(tab);\n        }\n    };\n\n    const approaches: IChoiceGroupOption[] = [\n        {\n            key: Approaches.RetrieveThenRead,\n            text: \"Retrieve-Then-Read\"\n        },\n        {\n            key: Approaches.ReadRetrieveRead,\n            text: \"Read-Retrieve-Read\"\n        },\n        {\n            key: Approaches.ReadDecomposeAsk,\n            text: \"Read-Decompose-Ask\"\n        }\n    ];\n\n    return (\n        <div className={styles.oneshotContainer}>\n            <div className={styles.oneshotTopSection}>\n                <SettingsButton className={styles.settingsButton} onClick={() => setIsConfigPanelOpen(!isConfigPanelOpen)} />\n                <h1 className={styles.oneshotTitle}>Ask your data</h1>\n                <div className={styles.oneshotQuestionInput}>\n                    <QuestionInput\n                        placeholder=\"Example: Does my plan cover annual eye exams?\"\n                        disabled={isLoading}\n                        onSend={question => makeApiRequest(question)}\n                    />\n                </div>\n            </div>\n            <div className={styles.oneshotBottomSection}>\n                {isLoading && <Spinner label=\"Generating answer\" />}\n                {!lastQuestionRef.current && <ExampleList onExampleClicked={onExampleClicked} />}\n                {!isLoading && answer && !error && (\n                    <div className={styles.oneshotAnswerContainer}>\n                        <Answer\n                            answer={answer}\n                            onCitationClicked={x => onShowCitation(x)}\n                            onThoughtProcessClicked={() => onToggleTab(AnalysisPanelTabs.ThoughtProcessTab)}\n                            onSupportingContentClicked={() => onToggleTab(AnalysisPanelTabs.SupportingContentTab)}\n                        />\n                    </div>\n                )}\n                {error ? (\n                    <div className={styles.oneshotAnswerContainer}>\n                        <AnswerError error={error.toString()} onRetry={() => makeApiRequest(lastQuestionRef.current)} />\n                    </div>\n                ) : null}\n                {activeAnalysisPanelTab && answer && (\n                    <AnalysisPanel\n                        className={styles.oneshotAnalysisPanel}\n                        activeCitation={activeCitation}\n                        onActiveTabChanged={x => onToggleTab(x)}\n                        citationHeight=\"600px\"\n                        answer={answer}\n                        activeTab={activeAnalysisPanelTab}\n                    />\n                )}\n            </div>\n\n            <Panel\n                headerText=\"Configure answer generation\"\n                isOpen={isConfigPanelOpen}\n                isBlocking={false}\n                onDismiss={() => setIsConfigPanelOpen(false)}\n                closeButtonAriaLabel=\"Close\"\n                onRenderFooterContent={() => <DefaultButton onClick={() => setIsConfigPanelOpen(false)}>Close</DefaultButton>}\n                isFooterAtBottom={true}\n            >\n                <ChoiceGroup\n                    className={styles.oneshotSettingsSeparator}\n                    label=\"Approach\"\n                    options={approaches}\n                    defaultSelectedKey={approach}\n                    onChange={onApproachChange}\n                />\n\n                {(approach === Approaches.RetrieveThenRead || approach === Approaches.ReadDecomposeAsk) && (\n                    <TextField\n                        className={styles.oneshotSettingsSeparator}\n                        defaultValue={promptTemplate}\n                        label=\"Override prompt template\"\n                        multiline\n                        autoAdjustHeight\n                        onChange={onPromptTemplateChange}\n                    />\n                )}\n\n                {approach === Approaches.ReadRetrieveRead && (\n                    <>\n                        <TextField\n                            className={styles.oneshotSettingsSeparator}\n                            defaultValue={promptTemplatePrefix}\n                            label=\"Override prompt prefix template\"\n                            multiline\n                            autoAdjustHeight\n                            onChange={onPromptTemplatePrefixChange}\n                        />\n                        <TextField\n                            className={styles.oneshotSettingsSeparator}\n                            defaultValue={promptTemplateSuffix}\n                            label=\"Override prompt suffix template\"\n                            multiline\n                            autoAdjustHeight\n                            onChange={onPromptTemplateSuffixChange}\n                        />\n                    </>\n                )}\n\n                <SpinButton\n                    className={styles.oneshotSettingsSeparator}\n                    label=\"Retrieve this many documents from search:\"\n                    min={1}\n                    max={50}\n                    defaultValue={retrieveCount.toString()}\n                    onChange={onRetrieveCountChange}\n                />\n                <TextField className={styles.oneshotSettingsSeparator} label=\"Exclude category\" onChange={onExcludeCategoryChanged} />\n                <Checkbox\n                    className={styles.oneshotSettingsSeparator}\n                    checked={useSemanticRanker}\n                    label=\"Use semantic ranker for retrieval\"\n                    onChange={onUseSemanticRankerChange}\n                />\n                <Checkbox\n                    className={styles.oneshotSettingsSeparator}\n                    checked={useSemanticCaptions}\n                    label=\"Use query-contextual summaries instead of whole documents\"\n                    onChange={onUseSemanticCaptionsChange}\n                    disabled={!useSemanticRanker}\n                />\n                <Dropdown\n                    className={styles.oneshotSettingsSeparator}\n                    label=\"Retrieval mode\"\n                    options={[\n                        { key: \"hybrid\", text: \"Vectors + Text (Hybrid)\", selected: retrievalMode == RetrievalMode.Hybrid, data: RetrievalMode.Hybrid },\n                        { key: \"vectors\", text: \"Vectors\", selected: retrievalMode == RetrievalMode.Vectors, data: RetrievalMode.Vectors },\n                        { key: \"text\", text: \"Text\", selected: retrievalMode == RetrievalMode.Text, data: RetrievalMode.Text }\n                    ]}\n                    required\n                    onChange={onRetrievalModeChange}\n                />\n            </Panel>\n        </div>\n    );\n}\n\nComponent.displayName = \"OneShot\";\n"],"names":["Component","isConfigPanelOpen","setIsConfigPanelOpen","useState","approach","setApproach","Approaches","promptTemplate","setPromptTemplate","promptTemplatePrefix","setPromptTemplatePrefix","promptTemplateSuffix","setPromptTemplateSuffix","retrievalMode","setRetrievalMode","RetrievalMode","retrieveCount","setRetrieveCount","useSemanticRanker","setUseSemanticRanker","useSemanticCaptions","setUseSemanticCaptions","excludeCategory","setExcludeCategory","lastQuestionRef","useRef","isLoading","setIsLoading","error","setError","answer","setAnswer","activeCitation","setActiveCitation","activeAnalysisPanelTab","setActiveAnalysisPanelTab","makeApiRequest","question","request","result","askApi","e","onPromptTemplateChange","_ev","newValue","onPromptTemplatePrefixChange","onPromptTemplateSuffixChange","onRetrieveCountChange","onRetrievalModeChange","option","index","onApproachChange","onUseSemanticRankerChange","checked","onUseSemanticCaptionsChange","onExcludeCategoryChanged","onExampleClicked","example","onShowCitation","citation","AnalysisPanelTabs","onToggleTab","tab","approaches","jsxs","styles","jsx","SettingsButton","QuestionInput","Spinner","ExampleList","Answer","x","AnswerError","AnalysisPanel","Panel","DefaultButton","ChoiceGroup","TextField","Fragment","SpinButton","Checkbox","Dropdown"],"mappings":"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"}